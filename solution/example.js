/**
 * ===========================================
 * üìù –ó–∞–≤–¥–∞–Ω–Ω—è N: [–ù–∞–∑–≤–∞ –∑–∞–¥–∞—á—ñ]
 * ===========================================
 * 
 * üìå –†—ñ–≤–µ–Ω—å: Easy | Medium | Hard
 * üìå –¢–µ–º–∞: [–ù–∞–ø—Ä–∏–∫–ª–∞–¥: "–ú–∞—Å–∏–≤–∏", "slice", "splice"]
 * 
 * üìñ –û–ø–∏—Å:
 * [–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å —É–º–æ–≤–∏ –∑–∞–¥–∞—á—ñ]
 * 
 * -------------------------------------------
 * üì• –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ:
 * - [–ø–æ—è—Å–Ω–µ–Ω–Ω—è –≤—Ö—ñ–¥–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: –º–∞—Å–∏–≤ —á–∏—Å–µ–ª]
 * 
 * üì§ –í–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ:
 * - [–ø–æ—è—Å–Ω–µ–Ω–Ω—è –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: –ø—ñ–¥–º–∞—Å–∏–≤]
 * -------------------------------------------
 */

/**
 * ‚ú® –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑–≤‚Äô—è–∑–∫—É –∑–∞–¥–∞—á—ñ
 * @param {Array} arr - [–û–ø–∏—Å –ø–µ—Ä—à–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞]
 * @param {...any} args - [–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, —è–∫—â–æ —î]
 * @returns {Array|Number|String|Boolean} —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—á–∏—Å–ª–µ–Ω—å
 */
function solution(arr, ...args) {
  // TODO: –ù–∞–ø–∏—à–∏ —Å–≤—ñ–π –∫–æ–¥ —Ç—É—Ç üëá
  
  return arr; // –ü–æ–≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
}

/**
 * üß™ –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (—Ç–µ—Å—Ç–æ–≤—ñ –∫–µ–π—Å–∏)
 */
console.log(solution([1, 2, 3, 4, 5])); 
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [1, 2, 3] (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –∑–∞–¥–∞—á—ñ "–í–∏—Ç—è–≥ –ø—ñ–¥–º–∞—Å–∏–≤—É")

console.log(solution(['a', 'b', 'c'])); 
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ['a', 'b'] (–∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∑–∞–¥–∞—á—ñ)


// =============================
// ‚úÖ –†—ñ—à–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–µ!
// =============================